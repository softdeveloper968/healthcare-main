@using GaHealthcareNurses.Entity.Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IToastService toastService
@inject NavigationManager navigation

<div class="d-flex">
    <div class="user_data">
        <div class="user_info">
            <span class="user_email">@(admin?.Data ?? string.Empty)</span>
            <div class="dropdown">
                <a href="#" class="dropdown-toggle active" data-toggle="dropdown"><i class="fas fa-caret-down"></i></a>
                <ul class="dropdown-menu animated">
                    <li><a @onclick="SignOut">Sign Out</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="admin" @onclick='(args) => MenuItemSelected(args, "All Service Requests")' Match="NavLinkMatch.All">
                <i class="fas fa-th-large"></i> Service Requests
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="admin/nurses-list" @onclick='(args) => MenuItemSelected(args, "Nurses")'>
                <i class="fas fa-tasks"></i>Nurses List
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="admin/agencies-list" @onclick='(args) => MenuItemSelected(args, "Agencies")'>
                <i class="fas fa-user"></i>Agencies List
            </NavLink>
        </li>
    </ul>
</div>


@code{
    [Parameter]
    public EventCallback<string> OnMenuItemSelected { get; set; }

    Response<string> admin = new Response<string>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        admin = await localStorage.GetItemAsync<Response<string>>("adminData");
        if (firstRender)
        {
            if (admin == null)
            {
                navigation.NavigateTo("admin/sign-in");
            }
        }
        StateHasChanged();
    }

    public async Task SignOut()
    {
        await localStorage.RemoveItemAsync("adminData");
        toastService.ShowSuccess("Logout successfull!");
        Task.Delay(2000);
        navigation.NavigateTo("/");
    }

    public async Task MenuItemSelected(MouseEventArgs e, string title)
    {
        await OnMenuItemSelected.InvokeAsync(title);
        StateHasChanged();
    }
}
