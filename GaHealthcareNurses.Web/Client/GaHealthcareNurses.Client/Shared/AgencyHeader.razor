@using GaHealthcareNurses.Entity.ViewModels
@using GaHealthcareNurses.Entity.Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Newtonsoft.Json;
@inject IToastService toastService
@inject NavigationManager navigation
@inject HttpClient Http
@inject GaHealthcareNurses.Client.NewFolder.WebServicePath wsp
<!-- Header
============================================= -->
<header id="home">

    <!-- Start Navigation -->
    <nav class="navbar navbar-default attr-border navbar-sticky bootsnav on no-full">

        <div class="container">

            <!-- Start Header Navigation -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                    <i class="fa fa-bars"></i>
                </button>
                <a class="navbar-brand" href="/">
                    <img src="assets/img/logo.png" class="logo logo-display" alt="Logo">
                </a>
            </div>
            <!-- End Header Navigation -->
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="navbar-menu">
                <ul class="nav navbar-nav navbar-right" data-in="#" data-out="#">
                    <li class="dropdown ">
                        <a href="/" class="dropdown-toggle" data-toggle="dropdown">Home</a>
                        <ul class="dropdown-menu animated">
                            @if (adminData == null)
                            {
                                <li><a href="admin/sign-in">Admin Login</a></li>
                            }
                            else
                            {
                                <li><a href="admin">Admin Dashboard</a></li>
                                <li><a @onclick="AdminLogout">Admin LogOut</a></li>
                            }
                        </ul>
                    </li>
                    <li>
                        <a href="client">Care Recipients</a>

                    </li>
                    <li class="active">
                        <a href="agency">Agencies</a>

                    </li>
                    <li>
                        <a href="nurses">Nurses</a>

                    </li>
                    <li>
                        <a href="http://www.ushealthcarenurses.blog/" target="_blank">Blog</a>
                    </li>
                    <li>
                        <a href="https://us-healthcare-nurses.myshopify.com/" target="_blank">Shop</a>
                    </li>
                    <li class="dropdown">
                        <a href="/" class="dropdown-toggle" data-toggle="dropdown">Resources</a>
                        <ul class="dropdown-menu animated">
                            <li><a href="education">Education</a></li>
                            <li><a href="salary-calculator">Salary Calculator</a></li>
                        </ul>
                    </li>
                    @*<li>
            <a href="education">Education</a>
        </li>*@
                <li>
                    <a href="https://help.ushealthcarenurses.com/" target="_blank">Help</a>
                </li>


                    @*<li>
            <a href="">contact</a>
        </li>*@
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle active" data-toggle="dropdown"><i class="fas fa-user"></i></a>
                        <ul class="dropdown-menu animated">

                            @if (agencyData == null || agencyInformation.IsDeleted)
                            {
                                <li><a href="agency/sign-in">Sign In</a></li>
                                <li><a href="agency/register">Sign Up</a></li>
                            }
                            else
                            {
                                <li><a href="agency/dashboard">Dashboard</a></li>
                                <li><a @onclick="Logout">Sign Out</a></li>
                            }

                        </ul>
                    </li>
                    @*@if (agencyData != null)
        {
            @if (agencyData.UserDetails != null)
            {
                <li><span class="user-email">@agencyData.UserDetails?.Email </span></li>
            }
        }


        @if (clientData != null)
        {
            @if (clientData.UserDetails != null)
            {
                <li><span class="user-email">@clientData.UserDetails?.Email </span></li>
            }
        }

        @if (adminData != null)
        {
            <li><span class="user-email">@adminData?.Data </span></li>
        }*@


                </ul>
            </div><!-- /.navbar-collapse -->
        </div>

    </nav>
    <!-- End Navigation -->

</header>
<!-- End Header -->

@code{
    LoginViewModel<UserDetails> agencyData = new LoginViewModel<UserDetails>();
    Response<string> adminData = new Response<string>();
    LoginViewModel<UserDetails> clientData = new LoginViewModel<UserDetails>();
    Employer agencyInformation = new Employer();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            agencyData = await localStorage.GetItemAsync<LoginViewModel<UserDetails>>("agencyData");
            adminData = await localStorage.GetItemAsync<Response<string>>("adminData");
            clientData = await localStorage.GetItemAsync<LoginViewModel<UserDetails>>("clientData");
            if (agencyData != null)
            {
                var agencyResponseMessage = await Http.GetAsync(wsp.Path + $"Employer/GetById?id={agencyData.UserDetails.UserId}");
                var agencyResponse = agencyResponseMessage.Content.ReadAsStringAsync().Result;
                agencyInformation = (JsonConvert.DeserializeObject<Response<Employer>>(agencyResponse)).Data;
            }
        }
        StateHasChanged();
    }

    public async Task Logout()
    {
        await localStorage.RemoveItemAsync("agencyData");
        toastService.ShowSuccess("Logout successfull!");
        navigation.NavigateTo("agency", forceLoad: true);
    }

    public async Task AdminLogout()
    {
        await localStorage.RemoveItemAsync("adminData");
        toastService.ShowSuccess("Logout successfull!");
        // Task.Delay(2000);
        navigation.NavigateTo("/", forceLoad: true);
    }
}